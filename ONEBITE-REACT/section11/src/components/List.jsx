import './List.css'
import TodoItem from './Todoitem';
import { useState, useMemo, useContext } from 'react';

import { TodoContext } from '../App';

const List = () => {
  const {todos, onUpdate, onDelete} = useContext(TodoContext);
  const [search, setSearch] = useState("");

  const onChangeSearch = (e)=>{
    setSearch(e.target.value);
  };

  const getFilteredData = ()=>{
    // Í≤ÄÏÉâÏñ¥Í∞Ä ÏóÜÏùÑ Îïå -> todos Î™®Îëê Î∞òÌôò
    if (search == ""){
      return todos;
    }
    // Í≤ÄÏÉâÏñ¥Í∞Ä ÏûàÏùÑ Îïå-> Í≤ÄÏÉâÏñ¥Î°ú filteringÎêú Í≤∞Í≥º Î∞òÌôò
    return todos.filter((todo)=>
      todo.content.toLowerCase().includes(search.toLowerCase()));
  }

  const filteredTodos = getFilteredData();

  const getAnalyzedData = ()=>{
    // Ïù¥Î†áÍ≤å ÏûëÏÑ±Ìï¥ÎÜìÏúºÎ©¥, todo Í≤ÄÏÉâÌïòÎäîÎç∞ÎèÑ getAnalyzedDataÍ∞Ä Í≥ÑÏÜçÌï¥ÏÑú Ìò∏Ï∂úÎêúÎã§! -> Ïó∞ÏÇ∞ ÎÇ≠ÎπÑ.
    console.log("getAnalyzedData Ìò∏Ï∂ú!");
    const totalCount = todos.length;
    const doneCount = todos.filter((todo)=>todo.isDone).length;
    const notDoneCount = totalCount-doneCount;

    return {
      totalCount,
      doneCount,
      notDoneCount
    }
  }

    const {totalCount, doneCount, notDoneCount} = useMemo(()=>{
    console.log("getAnalyzedData Ìò∏Ï∂ú!");
    const totalCount = todos.length;
    const doneCount = todos.filter((todo)=>todo.isDone).length;
    const notDoneCount = totalCount-doneCount;

    return {
      totalCount,
      doneCount,
      notDoneCount
    }
  }, [todos]);
  // ÏùòÏ°¥ÏÑ± Î∞∞Ïó¥: deps

  // const { totalCount, doneCount, notDoneCount } = getAnalyzedData();

  return (
  <div className="List">
    <h4>Todo List üå±</h4>
    <div>
      <div>total: {totalCount}</div>
      <div>done: {doneCount}</div>
      <div>notDone: {notDoneCount}</div>
    </div>
    <input
      value={search}
      onChange={onChangeSearch} 
      placeholder="Í≤ÄÏÉâÏñ¥Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
    />
    <div className='todo_wrapper'>
      {filteredTodos.map((todo)=>{
        return <TodoItem key={todo.id} {...todo} onUpdate = {onUpdate} onDelete = {onDelete}/>;
      })}
    </div>
  </div>
  );
}

export default List;